#!/usr/bin/env python3

## 1. Clase y objeto: Definiendo el nombre, edad y grado.
def p1():
    class Persona:
        # Constructor
        def __init__(self, nombre, edad, grado):
            self.nombre = nombre
            self.edad = edad
            self.grado = grado
    
        # Metodo.
        def saludo(self):
            return f"Hola, soy {self.nombre} y tengo {self.edad} de grado {self.grado}."
    
    # Objeto = Instancia
    diego = Persona("Diego", 24, "A")
    roberto = Persona("roberto", 14, "F")
    
    print(diego.saludo())
    print(roberto.saludo())


## 2. @Property: Calcular el area de un triangulo.
# Decorador que permite que la funcion actue como un atributo vinculado a la clase.

def p2():
    class Triangle:
        def __init__(self, base, height):
            self.base = base
            self.height = height

        @property 
        def calculation_1(self):
            return self.base * self.height // 2


    triangle_obj = Triangle(4, 5)
    print(f"\n[#] Base por altura = {triangle_obj.calculation_1}")

## 3. __str__: Descripcion del objeto.
# Metodo que vinculada la funcion __str__ al objeto.

def p3():
    class Triangle:
        def __init__(self, base, height):
            self.base = base
            self.height = height

        def __str__(self):
            return f"\n[#] Base: {self.base}; Altura: {self.height}"

    triangle_obj = Triangle(4, 5)
    print(triangle_obj)

## 5. __eq__: Booleano para determinar si el area y altura de 2 triangulos son iguales.
# Metodo que verifica la igualidad entre objetos.

def p5():
    class Triangle:
        def __init__(self, base, height):
            self.base = base
            self.height = height

        def __eq__(self, other):
            return self.base == other.base and self.height == other.height

    triangle_obj_1 = Triangle(3, 5)
    triangle_obj_2 = Triangle(4, 5)
    print(f"\n[#] 多Es igual? -> {triangle_obj_1 == triangle_obj_2}")


## 6. @staticmethod: Usando un numero, variable y una instancia para obtener al juego GOTY. 
#
def p6():
    class Triangle:
        goty = 7 

        def __init__(self, base, height, best=7):
            self.base = base
            self.height = height
            self.best = best

        @staticmethod # Opcion usando directamente un numero.
        def game_1(review):
            return review > 7
    
        @staticmethod # Opcion usando la variable "goty".
        def game_2(review):
            return review > Triangle.goty

        @staticmethod # Opcion usando una instancia + cambio de codigo para retornar.
        def game_3(instancia, review):
            return review > instancia.best

    triangle_obj_1 = Triangle(3, 5)
    print(f"\n[#] 1.多GOTY? -> {Triangle.game_1(9)}")
    print(f"\n[#] 2.多GOTY? -> {Triangle.game_2(9)}")
    print(f"\n[#] 3.多GOTY? -> {Triangle.game_3(triangle_obj_1, 9)}")










