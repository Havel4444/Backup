#!/usr/bin/env python3

def p1():
    class Calculator:
        
        @staticmethod
        def sum(num1, num2):
            return num1 + num2

        @staticmethod
        def minus(num1, num2):
            return num1 - num2

        @staticmethod
        def division(num1, num2):
            return num1 // num2 if num2 != 0 else "No se pude dividir entre 0." 

        @staticmethod
        def multiplication(num1, num2):
            return num1 * num2

    print(f"\n[#] Suma: {Calculator.sum(5, 4)}")
    print(f"\n[#] Resta: {Calculator.minus(5, 4)}")
    print(f"\n[#] Division: {Calculator.division(5, 0)}")
    print(f"\n[#] Multiplicacion: {Calculator.multiplication(5, 4)}")

def p2():
    class Game:

        goty = 8 

        def __init__(self, best=8):
            self.beat = best

        @staticmethod 
        def calculation_1(qualification):
            return qualification >= 8

        @staticmethod 
        def calculation_2(qualification):
            return qualification >= Game.goty

    print(f"\n[1] Â¿Goty? --> {Game.calculation_1(8)}")
    print(f"\n[2] Â¿Goty? --> {Game.calculation_2(8)}")

def p3():
    class Auto:
        def __init__(self, marca, modelo):
            self.marca = marca
            self.modelo = modelo

        @classmethod
        def deportivos(cls, marca):
            return cls(marca, "Deportivo")

        @classmethod
        @property
        def clasicos(cls):
            return cls("Mhusthan", "Clasico")

        def __str__(self):
            return f"\n[#] Auto: {self.marca}; [#] Modelo: {self.modelo}"

    auto_1 = Auto.deportivos("Ferrari")
    print(auto_1)
    auto_2 = Auto.clasicos
    print(auto_2)

def p4():
    class Estudiante:

        estudiantes = []

        def __init__(self, nombre, edad):
            self.nombre = nombre
            self.edad = edad

            Estudiante.estudiantes.append(self)

        @staticmethod
        def validacion(edad):
            return edad >= 18
           
        @classmethod
        def agregar_estudiante(cls, nombre, edad):
            if cls.validacion(edad):
                return cls(nombre, edad)
            else:
                print(f"\n[!] El estudiante {nombre} es menor de edad.")

        @staticmethod
        def mostrar_lista():
            print(f"\n[+] Estudiantes mayores de edad:")
            for i, alumnos in enumerate(Estudiante.estudiantes):
                print(f"\n\t[{i+1}] Nombre: {alumnos.nombre}; Edad: {alumnos.edad}")

    Estudiante.agregar_estudiante("S4vitar", 28)
    Estudiante.agregar_estudiante("LovoTec", 44)
    Estudiante.agregar_estudiante("Hackavis", 12)

    Estudiante.mostrar_lista()






















