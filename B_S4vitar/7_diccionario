#!/usr/bin/env python3

## 1. Notacion []: Mostrar el valor de la clave.
def p1():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    print(my_dictionary["Pera"])

## 2. Ediccion: modificar con pop/del y eliminar elementos.
def p2():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    my_dictionary["Pera"] = 3
    # Quiero que la clave "Limon" tenga el mismo valor que "Pera" y luego borra el elemento "Pera".
    my_dictionary["Limon"] = my_dictionary.pop("Pera")  
    # Eliminar un elemento.
    del my_dictionary["Zandia"]
    print(my_dictionary)

## 3. Edicion: Agregar elementos. 
def p3():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    my_dictionary["Banana"] = 12
    print(my_dictionary)

## 4. Diccionario dentro de otro diccionario: Mostrar valor de la clave que esta dentro de otro diccionario.
def p4():
    my_dictionary = {
        "name": "juan",
        "apellido": {"primero": "torres", "segundo": "castillo"},
        "edad": 12
    }
    print(my_dictionary["apellido"]["primero"])

## 5. Len: Cuenta cada elemento.
def p5():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    longitud = len(my_dictionary)
    print(longitud)

## 6. Keys y Values: Imprimir directamente las keys y values de una lista.
def p6():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    print(my_dictionary.keys())
    print(my_dictionary.values())

## 7. Get: Buscar el valor de la clave pero en caso contrario hacer lo siguiente.
def p7():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    busqueda = my_dictionary.get("Limon", "No encontrado.")
    print(busqueda)

## 8. Diccionario y bucle for lineal: Usar range y devolver el 0Â² de cada clave.
def p8():
    cuadrado = {x: x**2 for x in range(5)}
    print(cuadrado[4])
    print(cuadrado)

## 9. Clear: 
def p9():
    my_dictionary = {"Pera": 9, "Manzana": 4, "Zandia": 7}
    my_dictionary.clear()
    print(my_dictionary)
