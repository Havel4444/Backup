#!/usr/bin/env python3

## 1. Decorador: Envoltorio. Realizar 1 tarea antes y despues de llamar a la funcion principal.
# Orden superior con envoltorio como funcion.
def p1():
    def filas(nums_1):
        def envoltorio():
            print("1, 2")
            nums_1()
            print("5, 6")
        return envoltorio

    @filas
    def segunda_lista():
        print("3, 4")

    segunda_lista()

## 2. Decorador: Getter y Setter. Definir si las ganancias de una tienda tienen Superavit o Deficit con 1 conficional. 
# Cambiar el tipo de valor y el valor de una instacia.
def p2():
    class Tienda:
        def __init__(self, ganancia):
            self._ganancia = ganancia

        # Getter: 
        @property
        def ganancia(self):
            return self._ganancia

        # Setter:
        @ganancia.setter
        def ganancia(self, value):
            if isinstance(value, int):
                if value > 1000:
                    self._ganancia = "Superavit"
                else:
                    self._ganancia = "Deficit"
            else:
                raise ValueError(f"\n\t[!] Valor no entero y/o string.")

    data = Tienda("None")

    data.ganancia = 1399
    print(data.ganancia)

## 3.
def p3():
    pass

## 4.
def p4():
    pass

## 5.
def p5():
    pass

## 6.
def p6():
    pass

## 7.
def p7():
    pass

## 8.
def p8():
    pass

